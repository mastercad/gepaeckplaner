apply plugin: 'com.android.application'

//apply plugin: 'org.sonarqube'
apply plugin: 'jacoco'

android {
    lintOptions {
        checkReleaseBuilds false
        //If you want to continue even if errors found use following line
        abortOnError false
    }
//    ndkVersion 21
    compileSdkVersion 31
    defaultConfig {
        applicationId "de.byte_artist.luggage_planner"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 21
        versionName "1.21"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
//                version "22.1.7171670"
            }
        }
        testFunctionalTest = true
    }
//    signingConfigs {
//        release {
//            if (project.hasProperty('GEPAECKPLANER_RELEASE_STORE_FILE')) {
//                storeFile file(GEPAECKPLANER_RELEASE_STORE_FILE)
//                storePassword GEPAECKPLANER_RELEASE_STORE_PASSWORD
//                keyAlias GEPAECKPLANER_RELEASE_KEY_ALIAS
//                keyPassword GEPAECKPLANER_RELEASE_KEY_PASSWORD
//            }
//        }
//    }
    buildTypes {
        release {// Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled true

            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources true

//            signingConfig signingConfigs.release

            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile(
                'proguard-android-optimize.txt'
            ),
            'proguard-rules.pro'
        }
        debug {
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    productFlavors {
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    sourceSets {
        main {
            assets.srcDirs = ['src/main/assets', 'src/androidTest/assets/']
            res.srcDirs = ['src/main/res', 'src/androidTest/res']
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'com.google.firebase:firebase-core:17.2.1'
    implementation 'androidx.mediarouter:mediarouter:1.1.0'
    implementation 'com.google.android.gms:play-services-auth:17.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
