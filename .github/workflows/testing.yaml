name: Testing Workflow

# Step 1: Choose the branch or branches you want to run this workflow
on:
  pull_request:
    branches:
      - develop
      - master

jobs:
  testing:
    name: Lint Check and Testing

    runs-on: ubuntu-latest
#    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [21, 23, 30]
        target: [default, google_apis]

    steps:
      - name: Clone Repo
        uses: actions/checkout@v1

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      # Step 2: Decode Google services configuration file
#      - name: Decode google-services.json
#        env:
#          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}
#        run: echo $FIREBASE_CONFIG > app/google-services.json

      # Step 3: Check the code with ktlint, you can remove this job if you don't use ktlint
#      - name: Run Kotlin Linter
#        run: ./gradlew ktlintStagingDebugCheck

      - name: Run Android Linter
        run: ./gradlew lintRelease

      - name: Upload Linter results
        uses: actions/upload-artifact@v1
        with:
          name: linter-results
          path: app/build/reports/lint-results-release.html

      - name: Run all checks
        run: ./gradlew check

      - name: Run Unit Tests
        run: ./gradlew test

#      - name: Gradle cache
#        uses: actions/cache@v2
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}

#      - name: AVD cache
#        uses: actions/cache@v2
#        id: avd-cache
#        with:
#          path: |
#            ~/.android/avd/*
#            ~/.android/adb*
#          key: avd-${{ matrix.api-level }}

#      - name: create AVD and generate snapshot for caching
#        if: steps.avd-cache.outputs.cache-hit != 'true'
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: ${{ matrix.api-level }}
#          force-avd-creation: false
#          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
#          disable-animations: false
#          script: echo "Generated AVD snapshot for caching."

#      - name: run tests
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: ${{ matrix.api-level }}
#          force-avd-creation: false
#          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
#          disable-animations: true
#          script: ./gradlew connectedAndroidTest --stacktrace

      - name: Run android tests for min version 21
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: x86_64
          profile: Nexus 6
          disable-animations: true
          script: ./gradlew connectedAndroidTest --stacktrace

#     - name: Run android tests for recommendet version 29
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: 29
#          arch: x86
#          disable-animations: true
#          script: ./gradlew connectedAndroidTest --stacktrace

      - name: Upload Unit tests results
        uses: actions/upload-artifact@v1
        with:
          name: unit-tests-results
          path: app/build/reports/lint-results-release.html
